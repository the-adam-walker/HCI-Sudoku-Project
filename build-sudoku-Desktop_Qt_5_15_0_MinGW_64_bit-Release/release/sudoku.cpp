//
// Statemachine code from reading SCXML file 'sudoku.scxml'
// Created by: The Qt SCXML Compiler version 1 (Qt 5.15.0)
// WARNING! All changes made in this file will be lost!
//

#include "sudoku.h"

#include <qscxmlinvokableservice.h>
#include <qscxmltabledata.h>
#include <QScxmlEcmaScriptDataModel>

#if !defined(Q_QSCXMLC_OUTPUT_REVISION)
#error "The header file 'sudoku.scxml' doesn't include <qscxmltabledata.h>."
#elif Q_QSCXMLC_OUTPUT_REVISION != 1
#error "This file was generated using the qscxmlc from 5.15.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The qscxmlc has changed too much.)"
#endif

struct Sudoku::Data: private QScxmlTableData {
    Data(Sudoku &stateMachine)
        : stateMachine(stateMachine)
    {}

    void init() {
        stateMachine.setTableData(this);
        stateMachine.setDataModel(&dataModel);
    }

    QString name() const override final
    { return string(0); }

    QScxmlExecutableContent::ContainerId initialSetup() const override final
    { return 94; }

    QScxmlExecutableContent::InstructionId *instructions() const override final
    { return theInstructions; }

    QScxmlExecutableContent::StringId *dataNames(int *count) const override final
    { *count = 4; return dataIds; }

    QScxmlExecutableContent::EvaluatorInfo evaluatorInfo(QScxmlExecutableContent::EvaluatorId evaluatorId) const override final
    { Q_ASSERT(evaluatorId >= 0); Q_ASSERT(evaluatorId < 10); return evaluators[evaluatorId]; }

    QScxmlExecutableContent::AssignmentInfo assignmentInfo(QScxmlExecutableContent::EvaluatorId assignmentId) const override final
    { Q_ASSERT(assignmentId >= 0); Q_ASSERT(assignmentId < 3); return assignments[assignmentId]; }

    QScxmlExecutableContent::ForeachInfo foreachInfo(QScxmlExecutableContent::EvaluatorId foreachId) const override final
    { Q_ASSERT(foreachId >= 0); Q_ASSERT(foreachId < 0); return foreaches[foreachId]; }

    QString string(QScxmlExecutableContent::StringId id) const override final
    {
        Q_ASSERT(id >= QScxmlExecutableContent::NoString); Q_ASSERT(id < 44);
        if (id == QScxmlExecutableContent::NoString) return QString();
        return QString({static_cast<QStringData*>(strings.data + id)});
    }

    const qint32 *stateMachineTable() const override final
    { return theStateMachineTable; }

    QScxmlInvokableServiceFactory *serviceFactory(int id) const override final;

    Sudoku &stateMachine;
    QScxmlEcmaScriptDataModel dataModel;

    static QScxmlExecutableContent::ParameterInfo param(QScxmlExecutableContent::StringId name,
                                                        QScxmlExecutableContent::EvaluatorId expr,
                                                        QScxmlExecutableContent::StringId location)
    {
        QScxmlExecutableContent::ParameterInfo p;
        p.name = name;
        p.expr = expr;
        p.location = location;
        return p;
    }

    static QScxmlExecutableContent::InvokeInfo invoke(
            QScxmlExecutableContent::StringId id,
            QScxmlExecutableContent::StringId prefix,
            QScxmlExecutableContent::EvaluatorId expr,
            QScxmlExecutableContent::StringId location,
            QScxmlExecutableContent::StringId context,
            QScxmlExecutableContent::ContainerId finalize,
            bool autoforward)
    {
        QScxmlExecutableContent::InvokeInfo i;
        i.id = id;
        i.prefix = prefix;
        i.expr = expr;
        i.location = location;
        i.context = context;
        i.finalize = finalize;
        i.autoforward = autoforward;
        return i;
    }

    static qint32 theInstructions[];
    static QScxmlExecutableContent::StringId dataIds[];
    static QScxmlExecutableContent::EvaluatorInfo evaluators[];
    static QScxmlExecutableContent::AssignmentInfo assignments[];
    static QScxmlExecutableContent::ForeachInfo foreaches[];
    static const qint32 theStateMachineTable[];
    static struct Strings {
        QArrayData data[44];
        qunicodechar stringdata[11020];
    } strings;
};

Sudoku::Sudoku(QObject *parent)
    : QScxmlStateMachine(&staticMetaObject, parent)
    , data(new Data(*this))
{ qRegisterMetaType<Sudoku *>(); data->init(); }

Sudoku::~Sudoku()
{ delete data; }

QScxmlInvokableServiceFactory *Sudoku::Data::serviceFactory(int id) const
{
    Q_UNUSED(id);
    Q_UNREACHABLE();
}

qint32 Sudoku::Data::theInstructions[] = {
2, 1, 4, 1, 2, 4, 2, 1, 4, 7, 0, 4, 2, 1, 4, 6, 0, 4, 13, 1, 22, 3, 14, 15, -1,
-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 2, 16, 1, -1, 5, 2, -1, 2, 1, 4, 1, 2,
4, 2, 1, 4, 6, 3, 4, 13, 1, 22, 9, 1, 4, 2, 1, 16, 1, 14, 6, 5, 9, 1, 6, 2, 1, 4,
1, 2, 4, 10, 4, 13, 1, 12, 9, 1, 7, 2, 1, 6, 1, 4, 6, 8, 4, 13, 1, 6, 8, 1, 8, 2,
6, 9
};

QScxmlExecutableContent::StringId Sudoku::Data::dataIds[] = {
5, 16, 40, 41
};

QScxmlExecutableContent::EvaluatorInfo Sudoku::Data::evaluators[] = {
{ 11, 12 }, { 16, 17 }, { 5, 18 }, { 20, 21 }, { 26, 27 }, { 28, 29 },
{ 30, 31 }, { 26, 35 }, { 28, 36 }, { 42, 43 }
};

QScxmlExecutableContent::AssignmentInfo Sudoku::Data::assignments[] = {
{ 5, 6, 7 }, { 16, 38, 39 }, { 41, 38, 39 }
};

QScxmlExecutableContent::ForeachInfo Sudoku::Data::foreaches[] = {
{ -1, -1, -1, -1 }
};

#define STR_LIT(idx, ofs, len) \
    Q_STATIC_STRING_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(Strings, stringdata) + ofs * sizeof(qunicodechar) - idx * sizeof(QArrayData)) \
    )
Sudoku::Data::Strings Sudoku::Data::strings = {{
STR_LIT(0, 0, 6), STR_LIT(1, 7, 4), STR_LIT(2, 12, 7), STR_LIT(3, 20, 4),
STR_LIT(4, 25, 5), STR_LIT(5, 31, 9), STR_LIT(6, 41, 21), STR_LIT(7, 63, 83),
STR_LIT(8, 147, 5), STR_LIT(9, 153, 8), STR_LIT(10, 162, 6),
STR_LIT(11, 169, 10), STR_LIT(12, 180, 74), STR_LIT(13, 255, 6),
STR_LIT(14, 262, 47), STR_LIT(15, 310, 9), STR_LIT(16, 320, 12),
STR_LIT(17, 333, 73), STR_LIT(18, 407, 70), STR_LIT(19, 478, 7),
STR_LIT(20, 486, 7), STR_LIT(21, 494, 74), STR_LIT(22, 569, 4),
STR_LIT(23, 574, 4), STR_LIT(24, 579, 7), STR_LIT(25, 587, 4),
STR_LIT(26, 592, 17), STR_LIT(27, 610, 78), STR_LIT(28, 689, 24),
STR_LIT(29, 714, 91), STR_LIT(30, 806, 10), STR_LIT(31, 817, 71),
STR_LIT(32, 889, 3), STR_LIT(33, 893, 6), STR_LIT(34, 900, 3),
STR_LIT(35, 904, 77), STR_LIT(36, 982, 90), STR_LIT(37, 1073, 7),
STR_LIT(38, 1081, 4), STR_LIT(39, 1086, 49), STR_LIT(40, 1136, 9),
STR_LIT(41, 1146, 9), STR_LIT(42, 1156, 4906), STR_LIT(43, 6063, 4955)
},{
0x53,0x75,0x64,0x6f,0x6b,0x75,0, // 0: Sudoku
0x67,0x61,0x6d,0x65,0, // 1: game
0x72,0x65,0x73,0x74,0x61,0x72,0x74,0, // 2: restart
0x69,0x64,0x6c,0x65,0, // 3: idle
0x73,0x74,0x61,0x72,0x74,0, // 4: start
0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0, // 5: initState
0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0, // 6: _event.data.initState
0x61,0x73,0x73,0x69,0x67,0x6e,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x69,0x64,0x6c,0x65,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x65,0x78,0x70,0x72,0x3d,0x22,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x22,0, // 7: assign instruction in transition  of state 'idle' with expr=\"_event.data.initState\"
0x73,0x65,0x74,0x75,0x70,0, // 8: setup
0x75,0x6e,0x73,0x6f,0x6c,0x76,0x65,0x64,0, // 9: unsolved
0x73,0x6f,0x6c,0x76,0x65,0x64,0, // 10: solved
0x72,0x65,0x73,0x74,0x61,0x72,0x74,0x28,0x29,0x3b,0, // 11: restart();
0x73,0x63,0x72,0x69,0x70,0x74,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x67,0x61,0x6d,0x65,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x3d,0x22,0x72,0x65,0x73,0x74,0x61,0x72,0x74,0x28,0x29,0x3b,0x22,0, // 12: script instruction in transition  of state 'game' with source=\"restart();\"
0x75,0x70,0x64,0x61,0x74,0x65,0, // 13: update
0x73,0x65,0x6e,0x64,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x67,0x61,0x6d,0x65,0x27,0, // 14: send instruction in transition  of state 'game'
0x75,0x70,0x64,0x61,0x74,0x65,0x47,0x55,0x49,0, // 15: updateGUI
0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0, // 16: currentState
0x70,0x61,0x72,0x61,0x6d,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x67,0x61,0x6d,0x65,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x65,0x78,0x70,0x72,0x3d,0x22,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x22,0, // 17: param instruction in transition  of state 'game' with expr=\"currentState\"
0x70,0x61,0x72,0x61,0x6d,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x67,0x61,0x6d,0x65,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x65,0x78,0x70,0x72,0x3d,0x22,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x22,0, // 18: param instruction in transition  of state 'game' with expr=\"initState\"
0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0, // 19: playing
0x75,0x6e,0x64,0x6f,0x28,0x29,0x3b,0, // 20: undo();
0x73,0x63,0x72,0x69,0x70,0x74,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x3d,0x22,0x75,0x6e,0x64,0x6f,0x28,0x29,0x3b,0x22,0, // 21: script instruction in transition  of state 'playing' with source=\"undo();\"
0x75,0x6e,0x64,0x6f,0, // 22: undo
0x73,0x74,0x6f,0x70,0, // 23: stop
0x73,0x6f,0x6c,0x76,0x69,0x6e,0x67,0, // 24: solving
0x6e,0x6f,0x74,0x65,0, // 25: note
0x69,0x73,0x56,0x61,0x6c,0x69,0x64,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x29,0, // 26: isValidPosition()
0x69,0x66,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x73,0x6f,0x6c,0x76,0x69,0x6e,0x67,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x63,0x6f,0x6e,0x64,0x3d,0x22,0x69,0x73,0x56,0x61,0x6c,0x69,0x64,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x29,0x22,0, // 27: if instruction in transition  of state 'solving' with cond=\"isValidPosition()\"
0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x28,0x29,0x3b,0, // 28: calculateCurrentState();
0x73,0x63,0x72,0x69,0x70,0x74,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x73,0x6f,0x6c,0x76,0x69,0x6e,0x67,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x3d,0x22,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x28,0x29,0x3b,0x22,0, // 29: script instruction in transition  of state 'solving' with source=\"calculateCurrentState();\"
0x69,0x73,0x53,0x6f,0x6c,0x76,0x65,0x64,0x28,0x29,0, // 30: isSolved()
0x69,0x66,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x73,0x6f,0x6c,0x76,0x69,0x6e,0x67,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x63,0x6f,0x6e,0x64,0x3d,0x22,0x69,0x73,0x53,0x6f,0x6c,0x76,0x65,0x64,0x28,0x29,0x22,0, // 31: if instruction in transition  of state 'solving' with cond=\"isSolved()\"
0x74,0x61,0x70,0, // 32: tap
0x6e,0x6f,0x74,0x69,0x6e,0x67,0, // 33: noting
0x70,0x65,0x6e,0, // 34: pen
0x69,0x66,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x6e,0x6f,0x74,0x69,0x6e,0x67,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x63,0x6f,0x6e,0x64,0x3d,0x22,0x69,0x73,0x56,0x61,0x6c,0x69,0x64,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x29,0x22,0, // 35: if instruction in transition  of state 'noting' with cond=\"isValidPosition()\"
0x73,0x63,0x72,0x69,0x70,0x74,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x74,0x72,0x61,0x6e,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x20,0x6f,0x66,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x27,0x6e,0x6f,0x74,0x69,0x6e,0x67,0x27,0x20,0x77,0x69,0x74,0x68,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x3d,0x22,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x28,0x29,0x3b,0x22,0, // 36: script instruction in transition  of state 'noting' with source=\"calculateCurrentState();\"
0x6e,0x6f,0x74,0x65,0x70,0x61,0x64,0, // 37: notepad
0x5b,0x5b,0x5d,0x5d,0, // 38: [[]]
0x64,0x61,0x74,0x61,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x28,0x6e,0x6f,0x6e,0x65,0x29,0x20,0x77,0x69,0x74,0x68,0x20,0x65,0x78,0x70,0x72,0x3d,0x22,0x5b,0x5b,0x5d,0x5d,0x22,0, // 39: data instruction in state (none) with expr=\"[[]]\"
0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0, // 40: undoStack
0x6e,0x6f,0x74,0x65,0x53,0x74,0x61,0x74,0x65,0, // 41: noteState
0x2f,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x43,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x43,0x29,0x20,0x32,0x30,0x31,0x36,0x20,0x54,0x68,0x65,0x20,0x51,0x74,0x20,0x43,0x6f,0x6d,0x70,0x61,0x6e,0x79,0x20,0x4c,0x74,0x64,0x2e,0xd,0xa,0x2a,0x2a,0x20,0x43,0x6f,0x6e,0x74,0x61,0x63,0x74,0x3a,0x20,0x68,0x74,0x74,0x70,0x73,0x3a,0x2f,0x2f,0x77,0x77,0x77,0x2e,0x71,0x74,0x2e,0x69,0x6f,0x2f,0x6c,0x69,0x63,0x65,0x6e,0x73,0x69,0x6e,0x67,0x2f,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x54,0x68,0x69,0x73,0x20,0x66,0x69,0x6c,0x65,0x20,0x69,0x73,0x20,0x70,0x61,0x72,0x74,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x51,0x74,0x53,0x63,0x78,0x6d,0x6c,0x20,0x6d,0x6f,0x64,0x75,0x6c,0x65,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x51,0x74,0x20,0x54,0x6f,0x6f,0x6c,0x6b,0x69,0x74,0x2e,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x24,0x51,0x54,0x5f,0x42,0x45,0x47,0x49,0x4e,0x5f,0x4c,0x49,0x43,0x45,0x4e,0x53,0x45,0x3a,0x42,0x53,0x44,0x24,0xd,0xa,0x2a,0x2a,0x20,0x43,0x6f,0x6d,0x6d,0x65,0x72,0x63,0x69,0x61,0x6c,0x20,0x4c,0x69,0x63,0x65,0x6e,0x73,0x65,0x20,0x55,0x73,0x61,0x67,0x65,0xd,0xa,0x2a,0x2a,0x20,0x4c,0x69,0x63,0x65,0x6e,0x73,0x65,0x65,0x73,0x20,0x68,0x6f,0x6c,0x64,0x69,0x6e,0x67,0x20,0x76,0x61,0x6c,0x69,0x64,0x20,0x63,0x6f,0x6d,0x6d,0x65,0x72,0x63,0x69,0x61,0x6c,0x20,0x51,0x74,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x73,0x20,0x6d,0x61,0x79,0x20,0x75,0x73,0x65,0x20,0x74,0x68,0x69,0x73,0x20,0x66,0x69,0x6c,0x65,0x20,0x69,0x6e,0xd,0xa,0x2a,0x2a,0x20,0x61,0x63,0x63,0x6f,0x72,0x64,0x61,0x6e,0x63,0x65,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x6d,0x6d,0x65,0x72,0x63,0x69,0x61,0x6c,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x20,0x61,0x67,0x72,0x65,0x65,0x6d,0x65,0x6e,0x74,0x20,0x70,0x72,0x6f,0x76,0x69,0x64,0x65,0x64,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0xd,0xa,0x2a,0x2a,0x20,0x53,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x20,0x6f,0x72,0x2c,0x20,0x61,0x6c,0x74,0x65,0x72,0x6e,0x61,0x74,0x69,0x76,0x65,0x6c,0x79,0x2c,0x20,0x69,0x6e,0x20,0x61,0x63,0x63,0x6f,0x72,0x64,0x61,0x6e,0x63,0x65,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0x20,0x74,0x65,0x72,0x6d,0x73,0x20,0x63,0x6f,0x6e,0x74,0x61,0x69,0x6e,0x65,0x64,0x20,0x69,0x6e,0xd,0xa,0x2a,0x2a,0x20,0x61,0x20,0x77,0x72,0x69,0x74,0x74,0x65,0x6e,0x20,0x61,0x67,0x72,0x65,0x65,0x6d,0x65,0x6e,0x74,0x20,0x62,0x65,0x74,0x77,0x65,0x65,0x6e,0x20,0x79,0x6f,0x75,0x20,0x61,0x6e,0x64,0x20,0x54,0x68,0x65,0x20,0x51,0x74,0x20,0x43,0x6f,0x6d,0x70,0x61,0x6e,0x79,0x2e,0x20,0x46,0x6f,0x72,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x69,0x6e,0x67,0x20,0x74,0x65,0x72,0x6d,0x73,0xd,0xa,0x2a,0x2a,0x20,0x61,0x6e,0x64,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x73,0x65,0x65,0x20,0x68,0x74,0x74,0x70,0x73,0x3a,0x2f,0x2f,0x77,0x77,0x77,0x2e,0x71,0x74,0x2e,0x69,0x6f,0x2f,0x74,0x65,0x72,0x6d,0x73,0x2d,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x2e,0x20,0x46,0x6f,0x72,0x20,0x66,0x75,0x72,0x74,0x68,0x65,0x72,0xd,0xa,0x2a,0x2a,0x20,0x69,0x6e,0x66,0x6f,0x72,0x6d,0x61,0x74,0x69,0x6f,0x6e,0x20,0x75,0x73,0x65,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x6e,0x74,0x61,0x63,0x74,0x20,0x66,0x6f,0x72,0x6d,0x20,0x61,0x74,0x20,0x68,0x74,0x74,0x70,0x73,0x3a,0x2f,0x2f,0x77,0x77,0x77,0x2e,0x71,0x74,0x2e,0x69,0x6f,0x2f,0x63,0x6f,0x6e,0x74,0x61,0x63,0x74,0x2d,0x75,0x73,0x2e,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x42,0x53,0x44,0x20,0x4c,0x69,0x63,0x65,0x6e,0x73,0x65,0x20,0x55,0x73,0x61,0x67,0x65,0xd,0xa,0x2a,0x2a,0x20,0x41,0x6c,0x74,0x65,0x72,0x6e,0x61,0x74,0x69,0x76,0x65,0x6c,0x79,0x2c,0x20,0x79,0x6f,0x75,0x20,0x6d,0x61,0x79,0x20,0x75,0x73,0x65,0x20,0x74,0x68,0x69,0x73,0x20,0x66,0x69,0x6c,0x65,0x20,0x75,0x6e,0x64,0x65,0x72,0x20,0x74,0x68,0x65,0x20,0x74,0x65,0x72,0x6d,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x42,0x53,0x44,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0xd,0xa,0x2a,0x2a,0x20,0x61,0x73,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x73,0x3a,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x22,0x52,0x65,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x20,0x61,0x6e,0x64,0x20,0x75,0x73,0x65,0x20,0x69,0x6e,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x20,0x61,0x6e,0x64,0x20,0x62,0x69,0x6e,0x61,0x72,0x79,0x20,0x66,0x6f,0x72,0x6d,0x73,0x2c,0x20,0x77,0x69,0x74,0x68,0x20,0x6f,0x72,0x20,0x77,0x69,0x74,0x68,0x6f,0x75,0x74,0xd,0xa,0x2a,0x2a,0x20,0x6d,0x6f,0x64,0x69,0x66,0x69,0x63,0x61,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x61,0x72,0x65,0x20,0x70,0x65,0x72,0x6d,0x69,0x74,0x74,0x65,0x64,0x20,0x70,0x72,0x6f,0x76,0x69,0x64,0x65,0x64,0x20,0x74,0x68,0x61,0x74,0x20,0x74,0x68,0x65,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x69,0x6e,0x67,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x61,0x72,0x65,0xd,0xa,0x2a,0x2a,0x20,0x6d,0x65,0x74,0x3a,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x2a,0x20,0x52,0x65,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x73,0x20,0x6f,0x66,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x20,0x63,0x6f,0x64,0x65,0x20,0x6d,0x75,0x73,0x74,0x20,0x72,0x65,0x74,0x61,0x69,0x6e,0x20,0x74,0x68,0x65,0x20,0x61,0x62,0x6f,0x76,0x65,0x20,0x63,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x6e,0x6f,0x74,0x69,0x63,0x65,0x2c,0x20,0x74,0x68,0x69,0x73,0x20,0x6c,0x69,0x73,0x74,0x20,0x6f,0x66,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x61,0x6e,0x64,0x20,0x74,0x68,0x65,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x69,0x6e,0x67,0x20,0x64,0x69,0x73,0x63,0x6c,0x61,0x69,0x6d,0x65,0x72,0x2e,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x2a,0x20,0x52,0x65,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x73,0x20,0x69,0x6e,0x20,0x62,0x69,0x6e,0x61,0x72,0x79,0x20,0x66,0x6f,0x72,0x6d,0x20,0x6d,0x75,0x73,0x74,0x20,0x72,0x65,0x70,0x72,0x6f,0x64,0x75,0x63,0x65,0x20,0x74,0x68,0x65,0x20,0x61,0x62,0x6f,0x76,0x65,0x20,0x63,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x6e,0x6f,0x74,0x69,0x63,0x65,0x2c,0x20,0x74,0x68,0x69,0x73,0x20,0x6c,0x69,0x73,0x74,0x20,0x6f,0x66,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x61,0x6e,0x64,0x20,0x74,0x68,0x65,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x69,0x6e,0x67,0x20,0x64,0x69,0x73,0x63,0x6c,0x61,0x69,0x6d,0x65,0x72,0x20,0x69,0x6e,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x74,0x68,0x65,0x20,0x64,0x6f,0x63,0x75,0x6d,0x65,0x6e,0x74,0x61,0x74,0x69,0x6f,0x6e,0x20,0x61,0x6e,0x64,0x2f,0x6f,0x72,0x20,0x6f,0x74,0x68,0x65,0x72,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x73,0x20,0x70,0x72,0x6f,0x76,0x69,0x64,0x65,0x64,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x2e,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x2a,0x20,0x4e,0x65,0x69,0x74,0x68,0x65,0x72,0x20,0x74,0x68,0x65,0x20,0x6e,0x61,0x6d,0x65,0x20,0x6f,0x66,0x20,0x54,0x68,0x65,0x20,0x51,0x74,0x20,0x43,0x6f,0x6d,0x70,0x61,0x6e,0x79,0x20,0x4c,0x74,0x64,0x20,0x6e,0x6f,0x72,0x20,0x74,0x68,0x65,0x20,0x6e,0x61,0x6d,0x65,0x73,0x20,0x6f,0x66,0x20,0x69,0x74,0x73,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x74,0x72,0x69,0x62,0x75,0x74,0x6f,0x72,0x73,0x20,0x6d,0x61,0x79,0x20,0x62,0x65,0x20,0x75,0x73,0x65,0x64,0x20,0x74,0x6f,0x20,0x65,0x6e,0x64,0x6f,0x72,0x73,0x65,0x20,0x6f,0x72,0x20,0x70,0x72,0x6f,0x6d,0x6f,0x74,0x65,0x20,0x70,0x72,0x6f,0x64,0x75,0x63,0x74,0x73,0x20,0x64,0x65,0x72,0x69,0x76,0x65,0x64,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x6f,0x6d,0x20,0x74,0x68,0x69,0x73,0x20,0x73,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x20,0x77,0x69,0x74,0x68,0x6f,0x75,0x74,0x20,0x73,0x70,0x65,0x63,0x69,0x66,0x69,0x63,0x20,0x70,0x72,0x69,0x6f,0x72,0x20,0x77,0x72,0x69,0x74,0x74,0x65,0x6e,0x20,0x70,0x65,0x72,0x6d,0x69,0x73,0x73,0x69,0x6f,0x6e,0x2e,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x4f,0x46,0x54,0x57,0x41,0x52,0x45,0x20,0x49,0x53,0x20,0x50,0x52,0x4f,0x56,0x49,0x44,0x45,0x44,0x20,0x42,0x59,0x20,0x54,0x48,0x45,0x20,0x43,0x4f,0x50,0x59,0x52,0x49,0x47,0x48,0x54,0x20,0x48,0x4f,0x4c,0x44,0x45,0x52,0x53,0x20,0x41,0x4e,0x44,0x20,0x43,0x4f,0x4e,0x54,0x52,0x49,0x42,0x55,0x54,0x4f,0x52,0x53,0xd,0xa,0x2a,0x2a,0x20,0x22,0x41,0x53,0x20,0x49,0x53,0x22,0x20,0x41,0x4e,0x44,0x20,0x41,0x4e,0x59,0x20,0x45,0x58,0x50,0x52,0x45,0x53,0x53,0x20,0x4f,0x52,0x20,0x49,0x4d,0x50,0x4c,0x49,0x45,0x44,0x20,0x57,0x41,0x52,0x52,0x41,0x4e,0x54,0x49,0x45,0x53,0x2c,0x20,0x49,0x4e,0x43,0x4c,0x55,0x44,0x49,0x4e,0x47,0x2c,0x20,0x42,0x55,0x54,0x20,0x4e,0x4f,0x54,0xd,0xa,0x2a,0x2a,0x20,0x4c,0x49,0x4d,0x49,0x54,0x45,0x44,0x20,0x54,0x4f,0x2c,0x20,0x54,0x48,0x45,0x20,0x49,0x4d,0x50,0x4c,0x49,0x45,0x44,0x20,0x57,0x41,0x52,0x52,0x41,0x4e,0x54,0x49,0x45,0x53,0x20,0x4f,0x46,0x20,0x4d,0x45,0x52,0x43,0x48,0x41,0x4e,0x54,0x41,0x42,0x49,0x4c,0x49,0x54,0x59,0x20,0x41,0x4e,0x44,0x20,0x46,0x49,0x54,0x4e,0x45,0x53,0x53,0x20,0x46,0x4f,0x52,0xd,0xa,0x2a,0x2a,0x20,0x41,0x20,0x50,0x41,0x52,0x54,0x49,0x43,0x55,0x4c,0x41,0x52,0x20,0x50,0x55,0x52,0x50,0x4f,0x53,0x45,0x20,0x41,0x52,0x45,0x20,0x44,0x49,0x53,0x43,0x4c,0x41,0x49,0x4d,0x45,0x44,0x2e,0x20,0x49,0x4e,0x20,0x4e,0x4f,0x20,0x45,0x56,0x45,0x4e,0x54,0x20,0x53,0x48,0x41,0x4c,0x4c,0x20,0x54,0x48,0x45,0x20,0x43,0x4f,0x50,0x59,0x52,0x49,0x47,0x48,0x54,0xd,0xa,0x2a,0x2a,0x20,0x4f,0x57,0x4e,0x45,0x52,0x20,0x4f,0x52,0x20,0x43,0x4f,0x4e,0x54,0x52,0x49,0x42,0x55,0x54,0x4f,0x52,0x53,0x20,0x42,0x45,0x20,0x4c,0x49,0x41,0x42,0x4c,0x45,0x20,0x46,0x4f,0x52,0x20,0x41,0x4e,0x59,0x20,0x44,0x49,0x52,0x45,0x43,0x54,0x2c,0x20,0x49,0x4e,0x44,0x49,0x52,0x45,0x43,0x54,0x2c,0x20,0x49,0x4e,0x43,0x49,0x44,0x45,0x4e,0x54,0x41,0x4c,0x2c,0xd,0xa,0x2a,0x2a,0x20,0x53,0x50,0x45,0x43,0x49,0x41,0x4c,0x2c,0x20,0x45,0x58,0x45,0x4d,0x50,0x4c,0x41,0x52,0x59,0x2c,0x20,0x4f,0x52,0x20,0x43,0x4f,0x4e,0x53,0x45,0x51,0x55,0x45,0x4e,0x54,0x49,0x41,0x4c,0x20,0x44,0x41,0x4d,0x41,0x47,0x45,0x53,0x20,0x28,0x49,0x4e,0x43,0x4c,0x55,0x44,0x49,0x4e,0x47,0x2c,0x20,0x42,0x55,0x54,0x20,0x4e,0x4f,0x54,0xd,0xa,0x2a,0x2a,0x20,0x4c,0x49,0x4d,0x49,0x54,0x45,0x44,0x20,0x54,0x4f,0x2c,0x20,0x50,0x52,0x4f,0x43,0x55,0x52,0x45,0x4d,0x45,0x4e,0x54,0x20,0x4f,0x46,0x20,0x53,0x55,0x42,0x53,0x54,0x49,0x54,0x55,0x54,0x45,0x20,0x47,0x4f,0x4f,0x44,0x53,0x20,0x4f,0x52,0x20,0x53,0x45,0x52,0x56,0x49,0x43,0x45,0x53,0x3b,0x20,0x4c,0x4f,0x53,0x53,0x20,0x4f,0x46,0x20,0x55,0x53,0x45,0x2c,0xd,0xa,0x2a,0x2a,0x20,0x44,0x41,0x54,0x41,0x2c,0x20,0x4f,0x52,0x20,0x50,0x52,0x4f,0x46,0x49,0x54,0x53,0x3b,0x20,0x4f,0x52,0x20,0x42,0x55,0x53,0x49,0x4e,0x45,0x53,0x53,0x20,0x49,0x4e,0x54,0x45,0x52,0x52,0x55,0x50,0x54,0x49,0x4f,0x4e,0x29,0x20,0x48,0x4f,0x57,0x45,0x56,0x45,0x52,0x20,0x43,0x41,0x55,0x53,0x45,0x44,0x20,0x41,0x4e,0x44,0x20,0x4f,0x4e,0x20,0x41,0x4e,0x59,0xd,0xa,0x2a,0x2a,0x20,0x54,0x48,0x45,0x4f,0x52,0x59,0x20,0x4f,0x46,0x20,0x4c,0x49,0x41,0x42,0x49,0x4c,0x49,0x54,0x59,0x2c,0x20,0x57,0x48,0x45,0x54,0x48,0x45,0x52,0x20,0x49,0x4e,0x20,0x43,0x4f,0x4e,0x54,0x52,0x41,0x43,0x54,0x2c,0x20,0x53,0x54,0x52,0x49,0x43,0x54,0x20,0x4c,0x49,0x41,0x42,0x49,0x4c,0x49,0x54,0x59,0x2c,0x20,0x4f,0x52,0x20,0x54,0x4f,0x52,0x54,0xd,0xa,0x2a,0x2a,0x20,0x28,0x49,0x4e,0x43,0x4c,0x55,0x44,0x49,0x4e,0x47,0x20,0x4e,0x45,0x47,0x4c,0x49,0x47,0x45,0x4e,0x43,0x45,0x20,0x4f,0x52,0x20,0x4f,0x54,0x48,0x45,0x52,0x57,0x49,0x53,0x45,0x29,0x20,0x41,0x52,0x49,0x53,0x49,0x4e,0x47,0x20,0x49,0x4e,0x20,0x41,0x4e,0x59,0x20,0x57,0x41,0x59,0x20,0x4f,0x55,0x54,0x20,0x4f,0x46,0x20,0x54,0x48,0x45,0x20,0x55,0x53,0x45,0xd,0xa,0x2a,0x2a,0x20,0x4f,0x46,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x4f,0x46,0x54,0x57,0x41,0x52,0x45,0x2c,0x20,0x45,0x56,0x45,0x4e,0x20,0x49,0x46,0x20,0x41,0x44,0x56,0x49,0x53,0x45,0x44,0x20,0x4f,0x46,0x20,0x54,0x48,0x45,0x20,0x50,0x4f,0x53,0x53,0x49,0x42,0x49,0x4c,0x49,0x54,0x59,0x20,0x4f,0x46,0x20,0x53,0x55,0x43,0x48,0x20,0x44,0x41,0x4d,0x41,0x47,0x45,0x2e,0x22,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x24,0x51,0x54,0x5f,0x45,0x4e,0x44,0x5f,0x4c,0x49,0x43,0x45,0x4e,0x53,0x45,0x24,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2f,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x72,0x65,0x73,0x74,0x61,0x72,0x74,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x20,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x2e,0x73,0x6c,0x69,0x63,0x65,0x28,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x73,0x56,0x61,0x6c,0x69,0x64,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x78,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x79,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x79,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x78,0x20,0x3c,0x20,0x30,0x20,0x7c,0x7c,0x20,0x78,0x20,0x3e,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x79,0x20,0x3c,0x20,0x30,0x20,0x7c,0x7c,0x20,0x79,0x20,0x3e,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x20,0x21,0x3d,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x69,0x73,0x56,0x61,0x6c,0x69,0x64,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x29,0x20,0x3d,0x3d,0x3d,0x20,0x66,0x61,0x6c,0x73,0x65,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x78,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x79,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x79,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x3d,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x30,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x2b,0x3d,0x20,0x31,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x2e,0x70,0x75,0x73,0x68,0x28,0x5b,0x78,0x2c,0x20,0x79,0x5d,0x29,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x73,0x4f,0x4b,0x28,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x74,0x65,0x6d,0x70,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0x5b,0x69,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x3d,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x65,0x6d,0x70,0x2e,0x69,0x6e,0x64,0x65,0x78,0x4f,0x66,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x29,0x20,0x3e,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x65,0x6d,0x70,0x2e,0x70,0x75,0x73,0x68,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x73,0x53,0x6f,0x6c,0x76,0x65,0x64,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x69,0x73,0x4f,0x4b,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x29,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x6f,0x6c,0x75,0x6d,0x6e,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x73,0x71,0x75,0x61,0x72,0x65,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x6a,0x20,0x3d,0x20,0x30,0x3b,0x20,0x6a,0x20,0x3c,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x6a,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x75,0x6d,0x6e,0x2e,0x70,0x75,0x73,0x68,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x6a,0x5d,0x5b,0x69,0x5d,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x71,0x75,0x61,0x72,0x65,0x2e,0x70,0x75,0x73,0x68,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x4d,0x61,0x74,0x68,0x2e,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x69,0x20,0x2f,0x20,0x33,0x29,0x20,0x2a,0x20,0x33,0x20,0x2b,0x20,0x4d,0x61,0x74,0x68,0x2e,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x6a,0x20,0x2f,0x20,0x33,0x29,0x5d,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5b,0x69,0x20,0x25,0x20,0x33,0x20,0x2a,0x20,0x33,0x20,0x2b,0x20,0x6a,0x20,0x25,0x20,0x33,0x5d,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x69,0x73,0x4f,0x4b,0x28,0x63,0x6f,0x6c,0x75,0x6d,0x6e,0x29,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x69,0x73,0x4f,0x4b,0x28,0x73,0x71,0x75,0x61,0x72,0x65,0x29,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x75,0x6e,0x64,0x6f,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x6c,0x61,0x73,0x74,0x4d,0x6f,0x76,0x65,0x20,0x3d,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x2e,0x70,0x6f,0x70,0x28,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x20,0x3d,0x20,0x6c,0x61,0x73,0x74,0x4d,0x6f,0x76,0x65,0x5b,0x30,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x79,0x20,0x3d,0x20,0x6c,0x61,0x73,0x74,0x4d,0x6f,0x76,0x65,0x5b,0x31,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x3d,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x2d,0x3d,0x20,0x31,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x6e,0x6f,0x74,0x65,0x28,0x29,0x20,0x7b,0xd,0xa,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x70,0x65,0x6e,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x66,0x73,0x20,0x3d,0x20,0x72,0x65,0x71,0x75,0x69,0x72,0x65,0x28,0x22,0x66,0x73,0x22,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x64,0x61,0x74,0x61,0x20,0x3d,0x20,0x27,0x27,0x3b,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x61,0x74,0x61,0x20,0x2b,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x73,0x2e,0x77,0x72,0x69,0x74,0x65,0x46,0x69,0x6c,0x65,0x28,0x27,0x2e,0x2e,0x2f,0x2f,0x64,0x61,0x74,0x61,0x2f,0x2f,0x6e,0x6f,0x74,0x65,0x73,0x2e,0x64,0x61,0x74,0x61,0x27,0x2c,0x20,0x64,0x61,0x74,0x61,0x2c,0x20,0x28,0x65,0x72,0x72,0x29,0x20,0x3d,0x3e,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x65,0x72,0x72,0x29,0x20,0x74,0x68,0x72,0x6f,0x77,0x20,0x65,0x72,0x72,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x7d,0xd,0xa,0, // 42: /****************************************************************************\r\n**\r\n** Copyright (C) 2016 The Qt Company Ltd.\r\n** Contact: https://www.qt.io/licensing/\r\n**\r\n** This file is part of the QtScxml module of the Qt Toolkit.\r\n**\r\n** $QT_BEGIN_LICENSE:BSD$\r\n** Commercial License Usage\r\n** Licensees holding valid commercial Qt licenses may use this file in\r\n** accordance with the commercial license agreement provided with the\r\n** Software or, alternatively, in accordance with the terms contained in\r\n** a written agreement between you and The Qt Company. For licensing terms\r\n** and conditions see https://www.qt.io/terms-conditions. For further\r\n** information use the contact form at https://www.qt.io/contact-us.\r\n**\r\n** BSD License Usage\r\n** Alternatively, you may use this file under the terms of the BSD license\r\n** as follows:\r\n**\r\n** \"Redistribution and use in source and binary forms, with or without\r\n** modification, are permitted provided that the following conditions are\r\n** met:\r\n**   * Redistributions of source code must retain the above copyright\r\n**     notice, this list of conditions and the following disclaimer.\r\n**   * Redistributions in binary form must reproduce the above copyright\r\n**     notice, this list of conditions and the following disclaimer in\r\n**     the documentation and/or other materials provided with the\r\n**     distribution.\r\n**   * Neither the name of The Qt Company Ltd nor the names of its\r\n**     contributors may be used to endorse or promote products derived\r\n**     from this software without specific prior written permission.\r\n**\r\n**\r\n** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n** \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"\r\n**\r\n** $QT_END_LICENSE$\r\n**\r\n****************************************************************************/\r\nfunction restart() {\r\n    for (var i = 0; i < initState.length; i++)\r\n        currentState[i] = initState[i].slice();\r\n    undoStack = [];\r\n}\r\n\r\nfunction isValidPosition() {\r\n    var x = _event.data.x;\r\n    var y = _event.data.y;\r\n    if (x < 0 || x >= initState.length)\r\n        return false;\r\n    if (y < 0 || y >= initState.length)\r\n        return false;\r\n    if (initState[x][y] !== 0)\r\n        return false;\r\n    return true;\r\n}\r\n\r\nfunction calculateCurrentState() {\r\n    if (isValidPosition() === false)\r\n        return;\r\n    var x = _event.data.x;\r\n    var y = _event.data.y;\r\n    var currentValue = currentState[x][y];\r\n    if (currentValue === initState.length)\r\n        currentValue = 0;\r\n    else\r\n        currentValue += 1;\r\n    currentState[x][y] = currentValue;\r\n    undoStack.push([x, y]);\r\n}\r\n\r\nfunction isOK(numbers) {\r\n    var temp = [];\r\n    for (var i = 0; i < numbers.length; i++) {\r\n        var currentValue = numbers[i];\r\n        if (currentValue === 0)\r\n            return false;\r\n        if (temp.indexOf(currentValue) >= 0)\r\n            return false;\r\n        temp.push(currentValue);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction isSolved() {\r\n    for (var i = 0; i < currentState.length; i++) {\r\n        if (!isOK(currentState[i]))\r\n            return false;\r\n\r\n        var column = [];\r\n        var square = [];\r\n        for (var j = 0; j < currentState[i].length; j++) {\r\n            column.push(currentState[j][i]);\r\n            square.push(currentState[Math.floor(i / 3) * 3 + Math.floor(j / 3)]\r\n                                    [i % 3 * 3 + j % 3]);\r\n        }\r\n\r\n        if (!isOK(column))\r\n            return false;\r\n        if (!isOK(square))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction undo() {\r\n    if (!undoStack.length)\r\n        return;\r\n\r\n    var lastMove = undoStack.pop();\r\n    var x = lastMove[0];\r\n    var y = lastMove[1];\r\n    var currentValue = currentState[x][y];\r\n    if (currentValue === 0)\r\n        currentValue = initState.length;\r\n    else\r\n        currentValue -= 1;\r\n    currentState[x][y] = currentValue;\r\n}\r\n\r\nfunction note() {\r\n\r\n}\r\n\r\nfunction pen() {\r\n    var fs = require(\"fs\");\r\n    var data = '';\r\n\r\n    for (var i = 0; i < currentState.length; i++) {\r\n       data += currentState[i];\r\n    }\r\n    fs.writeFile('..//data//notes.data', data, (err) => {\r\n        if (err) throw err;\r\n    });\r\n    undoStack = [];\r\n}\r\n
0x73,0x63,0x72,0x69,0x70,0x74,0x20,0x69,0x6e,0x73,0x74,0x72,0x75,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x6e,0x20,0x73,0x74,0x61,0x74,0x65,0x20,0x28,0x6e,0x6f,0x6e,0x65,0x29,0x20,0x77,0x69,0x74,0x68,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x3d,0x22,0x2f,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x43,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0x20,0x28,0x43,0x29,0x20,0x32,0x30,0x31,0x36,0x20,0x54,0x68,0x65,0x20,0x51,0x74,0x20,0x43,0x6f,0x6d,0x70,0x61,0x6e,0x79,0x20,0x4c,0x74,0x64,0x2e,0xd,0xa,0x2a,0x2a,0x20,0x43,0x6f,0x6e,0x74,0x61,0x63,0x74,0x3a,0x20,0x68,0x74,0x74,0x70,0x73,0x3a,0x2f,0x2f,0x77,0x77,0x77,0x2e,0x71,0x74,0x2e,0x69,0x6f,0x2f,0x6c,0x69,0x63,0x65,0x6e,0x73,0x69,0x6e,0x67,0x2f,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x54,0x68,0x69,0x73,0x20,0x66,0x69,0x6c,0x65,0x20,0x69,0x73,0x20,0x70,0x61,0x72,0x74,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x51,0x74,0x53,0x63,0x78,0x6d,0x6c,0x20,0x6d,0x6f,0x64,0x75,0x6c,0x65,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x51,0x74,0x20,0x54,0x6f,0x6f,0x6c,0x6b,0x69,0x74,0x2e,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x24,0x51,0x54,0x5f,0x42,0x45,0x47,0x49,0x4e,0x5f,0x4c,0x49,0x43,0x45,0x4e,0x53,0x45,0x3a,0x42,0x53,0x44,0x24,0xd,0xa,0x2a,0x2a,0x20,0x43,0x6f,0x6d,0x6d,0x65,0x72,0x63,0x69,0x61,0x6c,0x20,0x4c,0x69,0x63,0x65,0x6e,0x73,0x65,0x20,0x55,0x73,0x61,0x67,0x65,0xd,0xa,0x2a,0x2a,0x20,0x4c,0x69,0x63,0x65,0x6e,0x73,0x65,0x65,0x73,0x20,0x68,0x6f,0x6c,0x64,0x69,0x6e,0x67,0x20,0x76,0x61,0x6c,0x69,0x64,0x20,0x63,0x6f,0x6d,0x6d,0x65,0x72,0x63,0x69,0x61,0x6c,0x20,0x51,0x74,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x73,0x20,0x6d,0x61,0x79,0x20,0x75,0x73,0x65,0x20,0x74,0x68,0x69,0x73,0x20,0x66,0x69,0x6c,0x65,0x20,0x69,0x6e,0xd,0xa,0x2a,0x2a,0x20,0x61,0x63,0x63,0x6f,0x72,0x64,0x61,0x6e,0x63,0x65,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x6d,0x6d,0x65,0x72,0x63,0x69,0x61,0x6c,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0x20,0x61,0x67,0x72,0x65,0x65,0x6d,0x65,0x6e,0x74,0x20,0x70,0x72,0x6f,0x76,0x69,0x64,0x65,0x64,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0xd,0xa,0x2a,0x2a,0x20,0x53,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x20,0x6f,0x72,0x2c,0x20,0x61,0x6c,0x74,0x65,0x72,0x6e,0x61,0x74,0x69,0x76,0x65,0x6c,0x79,0x2c,0x20,0x69,0x6e,0x20,0x61,0x63,0x63,0x6f,0x72,0x64,0x61,0x6e,0x63,0x65,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0x20,0x74,0x65,0x72,0x6d,0x73,0x20,0x63,0x6f,0x6e,0x74,0x61,0x69,0x6e,0x65,0x64,0x20,0x69,0x6e,0xd,0xa,0x2a,0x2a,0x20,0x61,0x20,0x77,0x72,0x69,0x74,0x74,0x65,0x6e,0x20,0x61,0x67,0x72,0x65,0x65,0x6d,0x65,0x6e,0x74,0x20,0x62,0x65,0x74,0x77,0x65,0x65,0x6e,0x20,0x79,0x6f,0x75,0x20,0x61,0x6e,0x64,0x20,0x54,0x68,0x65,0x20,0x51,0x74,0x20,0x43,0x6f,0x6d,0x70,0x61,0x6e,0x79,0x2e,0x20,0x46,0x6f,0x72,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x69,0x6e,0x67,0x20,0x74,0x65,0x72,0x6d,0x73,0xd,0xa,0x2a,0x2a,0x20,0x61,0x6e,0x64,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x73,0x65,0x65,0x20,0x68,0x74,0x74,0x70,0x73,0x3a,0x2f,0x2f,0x77,0x77,0x77,0x2e,0x71,0x74,0x2e,0x69,0x6f,0x2f,0x74,0x65,0x72,0x6d,0x73,0x2d,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x2e,0x20,0x46,0x6f,0x72,0x20,0x66,0x75,0x72,0x74,0x68,0x65,0x72,0xd,0xa,0x2a,0x2a,0x20,0x69,0x6e,0x66,0x6f,0x72,0x6d,0x61,0x74,0x69,0x6f,0x6e,0x20,0x75,0x73,0x65,0x20,0x74,0x68,0x65,0x20,0x63,0x6f,0x6e,0x74,0x61,0x63,0x74,0x20,0x66,0x6f,0x72,0x6d,0x20,0x61,0x74,0x20,0x68,0x74,0x74,0x70,0x73,0x3a,0x2f,0x2f,0x77,0x77,0x77,0x2e,0x71,0x74,0x2e,0x69,0x6f,0x2f,0x63,0x6f,0x6e,0x74,0x61,0x63,0x74,0x2d,0x75,0x73,0x2e,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x42,0x53,0x44,0x20,0x4c,0x69,0x63,0x65,0x6e,0x73,0x65,0x20,0x55,0x73,0x61,0x67,0x65,0xd,0xa,0x2a,0x2a,0x20,0x41,0x6c,0x74,0x65,0x72,0x6e,0x61,0x74,0x69,0x76,0x65,0x6c,0x79,0x2c,0x20,0x79,0x6f,0x75,0x20,0x6d,0x61,0x79,0x20,0x75,0x73,0x65,0x20,0x74,0x68,0x69,0x73,0x20,0x66,0x69,0x6c,0x65,0x20,0x75,0x6e,0x64,0x65,0x72,0x20,0x74,0x68,0x65,0x20,0x74,0x65,0x72,0x6d,0x73,0x20,0x6f,0x66,0x20,0x74,0x68,0x65,0x20,0x42,0x53,0x44,0x20,0x6c,0x69,0x63,0x65,0x6e,0x73,0x65,0xd,0xa,0x2a,0x2a,0x20,0x61,0x73,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x73,0x3a,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x22,0x52,0x65,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x20,0x61,0x6e,0x64,0x20,0x75,0x73,0x65,0x20,0x69,0x6e,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x20,0x61,0x6e,0x64,0x20,0x62,0x69,0x6e,0x61,0x72,0x79,0x20,0x66,0x6f,0x72,0x6d,0x73,0x2c,0x20,0x77,0x69,0x74,0x68,0x20,0x6f,0x72,0x20,0x77,0x69,0x74,0x68,0x6f,0x75,0x74,0xd,0xa,0x2a,0x2a,0x20,0x6d,0x6f,0x64,0x69,0x66,0x69,0x63,0x61,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x61,0x72,0x65,0x20,0x70,0x65,0x72,0x6d,0x69,0x74,0x74,0x65,0x64,0x20,0x70,0x72,0x6f,0x76,0x69,0x64,0x65,0x64,0x20,0x74,0x68,0x61,0x74,0x20,0x74,0x68,0x65,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x69,0x6e,0x67,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x61,0x72,0x65,0xd,0xa,0x2a,0x2a,0x20,0x6d,0x65,0x74,0x3a,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x2a,0x20,0x52,0x65,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x73,0x20,0x6f,0x66,0x20,0x73,0x6f,0x75,0x72,0x63,0x65,0x20,0x63,0x6f,0x64,0x65,0x20,0x6d,0x75,0x73,0x74,0x20,0x72,0x65,0x74,0x61,0x69,0x6e,0x20,0x74,0x68,0x65,0x20,0x61,0x62,0x6f,0x76,0x65,0x20,0x63,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x6e,0x6f,0x74,0x69,0x63,0x65,0x2c,0x20,0x74,0x68,0x69,0x73,0x20,0x6c,0x69,0x73,0x74,0x20,0x6f,0x66,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x61,0x6e,0x64,0x20,0x74,0x68,0x65,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x69,0x6e,0x67,0x20,0x64,0x69,0x73,0x63,0x6c,0x61,0x69,0x6d,0x65,0x72,0x2e,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x2a,0x20,0x52,0x65,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x73,0x20,0x69,0x6e,0x20,0x62,0x69,0x6e,0x61,0x72,0x79,0x20,0x66,0x6f,0x72,0x6d,0x20,0x6d,0x75,0x73,0x74,0x20,0x72,0x65,0x70,0x72,0x6f,0x64,0x75,0x63,0x65,0x20,0x74,0x68,0x65,0x20,0x61,0x62,0x6f,0x76,0x65,0x20,0x63,0x6f,0x70,0x79,0x72,0x69,0x67,0x68,0x74,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x6e,0x6f,0x74,0x69,0x63,0x65,0x2c,0x20,0x74,0x68,0x69,0x73,0x20,0x6c,0x69,0x73,0x74,0x20,0x6f,0x66,0x20,0x63,0x6f,0x6e,0x64,0x69,0x74,0x69,0x6f,0x6e,0x73,0x20,0x61,0x6e,0x64,0x20,0x74,0x68,0x65,0x20,0x66,0x6f,0x6c,0x6c,0x6f,0x77,0x69,0x6e,0x67,0x20,0x64,0x69,0x73,0x63,0x6c,0x61,0x69,0x6d,0x65,0x72,0x20,0x69,0x6e,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x74,0x68,0x65,0x20,0x64,0x6f,0x63,0x75,0x6d,0x65,0x6e,0x74,0x61,0x74,0x69,0x6f,0x6e,0x20,0x61,0x6e,0x64,0x2f,0x6f,0x72,0x20,0x6f,0x74,0x68,0x65,0x72,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x73,0x20,0x70,0x72,0x6f,0x76,0x69,0x64,0x65,0x64,0x20,0x77,0x69,0x74,0x68,0x20,0x74,0x68,0x65,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x2e,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x2a,0x20,0x4e,0x65,0x69,0x74,0x68,0x65,0x72,0x20,0x74,0x68,0x65,0x20,0x6e,0x61,0x6d,0x65,0x20,0x6f,0x66,0x20,0x54,0x68,0x65,0x20,0x51,0x74,0x20,0x43,0x6f,0x6d,0x70,0x61,0x6e,0x79,0x20,0x4c,0x74,0x64,0x20,0x6e,0x6f,0x72,0x20,0x74,0x68,0x65,0x20,0x6e,0x61,0x6d,0x65,0x73,0x20,0x6f,0x66,0x20,0x69,0x74,0x73,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x74,0x72,0x69,0x62,0x75,0x74,0x6f,0x72,0x73,0x20,0x6d,0x61,0x79,0x20,0x62,0x65,0x20,0x75,0x73,0x65,0x64,0x20,0x74,0x6f,0x20,0x65,0x6e,0x64,0x6f,0x72,0x73,0x65,0x20,0x6f,0x72,0x20,0x70,0x72,0x6f,0x6d,0x6f,0x74,0x65,0x20,0x70,0x72,0x6f,0x64,0x75,0x63,0x74,0x73,0x20,0x64,0x65,0x72,0x69,0x76,0x65,0x64,0xd,0xa,0x2a,0x2a,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x6f,0x6d,0x20,0x74,0x68,0x69,0x73,0x20,0x73,0x6f,0x66,0x74,0x77,0x61,0x72,0x65,0x20,0x77,0x69,0x74,0x68,0x6f,0x75,0x74,0x20,0x73,0x70,0x65,0x63,0x69,0x66,0x69,0x63,0x20,0x70,0x72,0x69,0x6f,0x72,0x20,0x77,0x72,0x69,0x74,0x74,0x65,0x6e,0x20,0x70,0x65,0x72,0x6d,0x69,0x73,0x73,0x69,0x6f,0x6e,0x2e,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x4f,0x46,0x54,0x57,0x41,0x52,0x45,0x20,0x49,0x53,0x20,0x50,0x52,0x4f,0x56,0x49,0x44,0x45,0x44,0x20,0x42,0x59,0x20,0x54,0x48,0x45,0x20,0x43,0x4f,0x50,0x59,0x52,0x49,0x47,0x48,0x54,0x20,0x48,0x4f,0x4c,0x44,0x45,0x52,0x53,0x20,0x41,0x4e,0x44,0x20,0x43,0x4f,0x4e,0x54,0x52,0x49,0x42,0x55,0x54,0x4f,0x52,0x53,0xd,0xa,0x2a,0x2a,0x20,0x22,0x41,0x53,0x20,0x49,0x53,0x22,0x20,0x41,0x4e,0x44,0x20,0x41,0x4e,0x59,0x20,0x45,0x58,0x50,0x52,0x45,0x53,0x53,0x20,0x4f,0x52,0x20,0x49,0x4d,0x50,0x4c,0x49,0x45,0x44,0x20,0x57,0x41,0x52,0x52,0x41,0x4e,0x54,0x49,0x45,0x53,0x2c,0x20,0x49,0x4e,0x43,0x4c,0x55,0x44,0x49,0x4e,0x47,0x2c,0x20,0x42,0x55,0x54,0x20,0x4e,0x4f,0x54,0xd,0xa,0x2a,0x2a,0x20,0x4c,0x49,0x4d,0x49,0x54,0x45,0x44,0x20,0x54,0x4f,0x2c,0x20,0x54,0x48,0x45,0x20,0x49,0x4d,0x50,0x4c,0x49,0x45,0x44,0x20,0x57,0x41,0x52,0x52,0x41,0x4e,0x54,0x49,0x45,0x53,0x20,0x4f,0x46,0x20,0x4d,0x45,0x52,0x43,0x48,0x41,0x4e,0x54,0x41,0x42,0x49,0x4c,0x49,0x54,0x59,0x20,0x41,0x4e,0x44,0x20,0x46,0x49,0x54,0x4e,0x45,0x53,0x53,0x20,0x46,0x4f,0x52,0xd,0xa,0x2a,0x2a,0x20,0x41,0x20,0x50,0x41,0x52,0x54,0x49,0x43,0x55,0x4c,0x41,0x52,0x20,0x50,0x55,0x52,0x50,0x4f,0x53,0x45,0x20,0x41,0x52,0x45,0x20,0x44,0x49,0x53,0x43,0x4c,0x41,0x49,0x4d,0x45,0x44,0x2e,0x20,0x49,0x4e,0x20,0x4e,0x4f,0x20,0x45,0x56,0x45,0x4e,0x54,0x20,0x53,0x48,0x41,0x4c,0x4c,0x20,0x54,0x48,0x45,0x20,0x43,0x4f,0x50,0x59,0x52,0x49,0x47,0x48,0x54,0xd,0xa,0x2a,0x2a,0x20,0x4f,0x57,0x4e,0x45,0x52,0x20,0x4f,0x52,0x20,0x43,0x4f,0x4e,0x54,0x52,0x49,0x42,0x55,0x54,0x4f,0x52,0x53,0x20,0x42,0x45,0x20,0x4c,0x49,0x41,0x42,0x4c,0x45,0x20,0x46,0x4f,0x52,0x20,0x41,0x4e,0x59,0x20,0x44,0x49,0x52,0x45,0x43,0x54,0x2c,0x20,0x49,0x4e,0x44,0x49,0x52,0x45,0x43,0x54,0x2c,0x20,0x49,0x4e,0x43,0x49,0x44,0x45,0x4e,0x54,0x41,0x4c,0x2c,0xd,0xa,0x2a,0x2a,0x20,0x53,0x50,0x45,0x43,0x49,0x41,0x4c,0x2c,0x20,0x45,0x58,0x45,0x4d,0x50,0x4c,0x41,0x52,0x59,0x2c,0x20,0x4f,0x52,0x20,0x43,0x4f,0x4e,0x53,0x45,0x51,0x55,0x45,0x4e,0x54,0x49,0x41,0x4c,0x20,0x44,0x41,0x4d,0x41,0x47,0x45,0x53,0x20,0x28,0x49,0x4e,0x43,0x4c,0x55,0x44,0x49,0x4e,0x47,0x2c,0x20,0x42,0x55,0x54,0x20,0x4e,0x4f,0x54,0xd,0xa,0x2a,0x2a,0x20,0x4c,0x49,0x4d,0x49,0x54,0x45,0x44,0x20,0x54,0x4f,0x2c,0x20,0x50,0x52,0x4f,0x43,0x55,0x52,0x45,0x4d,0x45,0x4e,0x54,0x20,0x4f,0x46,0x20,0x53,0x55,0x42,0x53,0x54,0x49,0x54,0x55,0x54,0x45,0x20,0x47,0x4f,0x4f,0x44,0x53,0x20,0x4f,0x52,0x20,0x53,0x45,0x52,0x56,0x49,0x43,0x45,0x53,0x3b,0x20,0x4c,0x4f,0x53,0x53,0x20,0x4f,0x46,0x20,0x55,0x53,0x45,0x2c,0xd,0xa,0x2a,0x2a,0x20,0x44,0x41,0x54,0x41,0x2c,0x20,0x4f,0x52,0x20,0x50,0x52,0x4f,0x46,0x49,0x54,0x53,0x3b,0x20,0x4f,0x52,0x20,0x42,0x55,0x53,0x49,0x4e,0x45,0x53,0x53,0x20,0x49,0x4e,0x54,0x45,0x52,0x52,0x55,0x50,0x54,0x49,0x4f,0x4e,0x29,0x20,0x48,0x4f,0x57,0x45,0x56,0x45,0x52,0x20,0x43,0x41,0x55,0x53,0x45,0x44,0x20,0x41,0x4e,0x44,0x20,0x4f,0x4e,0x20,0x41,0x4e,0x59,0xd,0xa,0x2a,0x2a,0x20,0x54,0x48,0x45,0x4f,0x52,0x59,0x20,0x4f,0x46,0x20,0x4c,0x49,0x41,0x42,0x49,0x4c,0x49,0x54,0x59,0x2c,0x20,0x57,0x48,0x45,0x54,0x48,0x45,0x52,0x20,0x49,0x4e,0x20,0x43,0x4f,0x4e,0x54,0x52,0x41,0x43,0x54,0x2c,0x20,0x53,0x54,0x52,0x49,0x43,0x54,0x20,0x4c,0x49,0x41,0x42,0x49,0x4c,0x49,0x54,0x59,0x2c,0x20,0x4f,0x52,0x20,0x54,0x4f,0x52,0x54,0xd,0xa,0x2a,0x2a,0x20,0x28,0x49,0x4e,0x43,0x4c,0x55,0x44,0x49,0x4e,0x47,0x20,0x4e,0x45,0x47,0x4c,0x49,0x47,0x45,0x4e,0x43,0x45,0x20,0x4f,0x52,0x20,0x4f,0x54,0x48,0x45,0x52,0x57,0x49,0x53,0x45,0x29,0x20,0x41,0x52,0x49,0x53,0x49,0x4e,0x47,0x20,0x49,0x4e,0x20,0x41,0x4e,0x59,0x20,0x57,0x41,0x59,0x20,0x4f,0x55,0x54,0x20,0x4f,0x46,0x20,0x54,0x48,0x45,0x20,0x55,0x53,0x45,0xd,0xa,0x2a,0x2a,0x20,0x4f,0x46,0x20,0x54,0x48,0x49,0x53,0x20,0x53,0x4f,0x46,0x54,0x57,0x41,0x52,0x45,0x2c,0x20,0x45,0x56,0x45,0x4e,0x20,0x49,0x46,0x20,0x41,0x44,0x56,0x49,0x53,0x45,0x44,0x20,0x4f,0x46,0x20,0x54,0x48,0x45,0x20,0x50,0x4f,0x53,0x53,0x49,0x42,0x49,0x4c,0x49,0x54,0x59,0x20,0x4f,0x46,0x20,0x53,0x55,0x43,0x48,0x20,0x44,0x41,0x4d,0x41,0x47,0x45,0x2e,0x22,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x20,0x24,0x51,0x54,0x5f,0x45,0x4e,0x44,0x5f,0x4c,0x49,0x43,0x45,0x4e,0x53,0x45,0x24,0xd,0xa,0x2a,0x2a,0xd,0xa,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2a,0x2f,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x72,0x65,0x73,0x74,0x61,0x72,0x74,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x20,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x2e,0x73,0x6c,0x69,0x63,0x65,0x28,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x73,0x56,0x61,0x6c,0x69,0x64,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x78,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x79,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x79,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x78,0x20,0x3c,0x20,0x30,0x20,0x7c,0x7c,0x20,0x78,0x20,0x3e,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x79,0x20,0x3c,0x20,0x30,0x20,0x7c,0x7c,0x20,0x79,0x20,0x3e,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x20,0x21,0x3d,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74,0x65,0x43,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x69,0x73,0x56,0x61,0x6c,0x69,0x64,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x28,0x29,0x20,0x3d,0x3d,0x3d,0x20,0x66,0x61,0x6c,0x73,0x65,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x78,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x79,0x20,0x3d,0x20,0x5f,0x65,0x76,0x65,0x6e,0x74,0x2e,0x64,0x61,0x74,0x61,0x2e,0x79,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x3d,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x30,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x2b,0x3d,0x20,0x31,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x2e,0x70,0x75,0x73,0x68,0x28,0x5b,0x78,0x2c,0x20,0x79,0x5d,0x29,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x73,0x4f,0x4b,0x28,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x74,0x65,0x6d,0x70,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x6e,0x75,0x6d,0x62,0x65,0x72,0x73,0x5b,0x69,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x3d,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x65,0x6d,0x70,0x2e,0x69,0x6e,0x64,0x65,0x78,0x4f,0x66,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x29,0x20,0x3e,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x65,0x6d,0x70,0x2e,0x70,0x75,0x73,0x68,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x69,0x73,0x53,0x6f,0x6c,0x76,0x65,0x64,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x69,0x73,0x4f,0x4b,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x29,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x6f,0x6c,0x75,0x6d,0x6e,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x73,0x71,0x75,0x61,0x72,0x65,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x6a,0x20,0x3d,0x20,0x30,0x3b,0x20,0x6a,0x20,0x3c,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x6a,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x75,0x6d,0x6e,0x2e,0x70,0x75,0x73,0x68,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x6a,0x5d,0x5b,0x69,0x5d,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x73,0x71,0x75,0x61,0x72,0x65,0x2e,0x70,0x75,0x73,0x68,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x4d,0x61,0x74,0x68,0x2e,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x69,0x20,0x2f,0x20,0x33,0x29,0x20,0x2a,0x20,0x33,0x20,0x2b,0x20,0x4d,0x61,0x74,0x68,0x2e,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x6a,0x20,0x2f,0x20,0x33,0x29,0x5d,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5b,0x69,0x20,0x25,0x20,0x33,0x20,0x2a,0x20,0x33,0x20,0x2b,0x20,0x6a,0x20,0x25,0x20,0x33,0x5d,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x69,0x73,0x4f,0x4b,0x28,0x63,0x6f,0x6c,0x75,0x6d,0x6e,0x29,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x69,0x73,0x4f,0x4b,0x28,0x73,0x71,0x75,0x61,0x72,0x65,0x29,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x75,0x6e,0x64,0x6f,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x6c,0x61,0x73,0x74,0x4d,0x6f,0x76,0x65,0x20,0x3d,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x2e,0x70,0x6f,0x70,0x28,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x78,0x20,0x3d,0x20,0x6c,0x61,0x73,0x74,0x4d,0x6f,0x76,0x65,0x5b,0x30,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x79,0x20,0x3d,0x20,0x6c,0x61,0x73,0x74,0x4d,0x6f,0x76,0x65,0x5b,0x31,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x3d,0x3d,0x20,0x30,0x29,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x3d,0x20,0x69,0x6e,0x69,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x20,0x2d,0x3d,0x20,0x31,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x78,0x5d,0x5b,0x79,0x5d,0x20,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x56,0x61,0x6c,0x75,0x65,0x3b,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x6e,0x6f,0x74,0x65,0x28,0x29,0x20,0x7b,0xd,0xa,0xd,0xa,0x7d,0xd,0xa,0xd,0xa,0x66,0x75,0x6e,0x63,0x74,0x69,0x6f,0x6e,0x20,0x70,0x65,0x6e,0x28,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x66,0x73,0x20,0x3d,0x20,0x72,0x65,0x71,0x75,0x69,0x72,0x65,0x28,0x22,0x66,0x73,0x22,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x76,0x61,0x72,0x20,0x64,0x61,0x74,0x61,0x20,0x3d,0x20,0x27,0x27,0x3b,0xd,0xa,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x76,0x61,0x72,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x2e,0x6c,0x65,0x6e,0x67,0x74,0x68,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x61,0x74,0x61,0x20,0x2b,0x3d,0x20,0x63,0x75,0x72,0x72,0x65,0x6e,0x74,0x53,0x74,0x61,0x74,0x65,0x5b,0x69,0x5d,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0xd,0xa,0x20,0x20,0x20,0x20,0x66,0x73,0x2e,0x77,0x72,0x69,0x74,0x65,0x46,0x69,0x6c,0x65,0x28,0x27,0x2e,0x2e,0x2f,0x2f,0x64,0x61,0x74,0x61,0x2f,0x2f,0x6e,0x6f,0x74,0x65,0x73,0x2e,0x64,0x61,0x74,0x61,0x27,0x2c,0x20,0x64,0x61,0x74,0x61,0x2c,0x20,0x28,0x65,0x72,0x72,0x29,0x20,0x3d,0x3e,0x20,0x7b,0xd,0xa,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x65,0x72,0x72,0x29,0x20,0x74,0x68,0x72,0x6f,0x77,0x20,0x65,0x72,0x72,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x7d,0x29,0x3b,0xd,0xa,0x20,0x20,0x20,0x20,0x75,0x6e,0x64,0x6f,0x53,0x74,0x61,0x63,0x6b,0x20,0x3d,0x20,0x5b,0x5d,0x3b,0xd,0xa,0x7d,0xd,0xa,0x22,0 // 43: script instruction in state (none) with source=\"/****************************************************************************\r\n**\r\n** Copyright (C) 2016 The Qt Company Ltd.\r\n** Contact: https://www.qt.io/licensing/\r\n**\r\n** This file is part of the QtScxml module of the Qt Toolkit.\r\n**\r\n** $QT_BEGIN_LICENSE:BSD$\r\n** Commercial License Usage\r\n** Licensees holding valid commercial Qt licenses may use this file in\r\n** accordance with the commercial license agreement provided with the\r\n** Software or, alternatively, in accordance with the terms contained in\r\n** a written agreement between you and The Qt Company. For licensing terms\r\n** and conditions see https://www.qt.io/terms-conditions. For further\r\n** information use the contact form at https://www.qt.io/contact-us.\r\n**\r\n** BSD License Usage\r\n** Alternatively, you may use this file under the terms of the BSD license\r\n** as follows:\r\n**\r\n** \"Redistribution and use in source and binary forms, with or without\r\n** modification, are permitted provided that the following conditions are\r\n** met:\r\n**   * Redistributions of source code must retain the above copyright\r\n**     notice, this list of conditions and the following disclaimer.\r\n**   * Redistributions in binary form must reproduce the above copyright\r\n**     notice, this list of conditions and the following disclaimer in\r\n**     the documentation and/or other materials provided with the\r\n**     distribution.\r\n**   * Neither the name of The Qt Company Ltd nor the names of its\r\n**     contributors may be used to endorse or promote products derived\r\n**     from this software without specific prior written permission.\r\n**\r\n**\r\n** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n** \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"\r\n**\r\n** $QT_END_LICENSE$\r\n**\r\n****************************************************************************/\r\nfunction restart() {\r\n    for (var i = 0; i < initState.length; i++)\r\n        currentState[i] = initState[i].slice();\r\n    undoStack = [];\r\n}\r\n\r\nfunction isValidPosition() {\r\n    var x = _event.data.x;\r\n    var y = _event.data.y;\r\n    if (x < 0 || x >= initState.length)\r\n        return false;\r\n    if (y < 0 || y >= initState.length)\r\n        return false;\r\n    if (initState[x][y] !== 0)\r\n        return false;\r\n    return true;\r\n}\r\n\r\nfunction calculateCurrentState() {\r\n    if (isValidPosition() === false)\r\n        return;\r\n    var x = _event.data.x;\r\n    var y = _event.data.y;\r\n    var currentValue = currentState[x][y];\r\n    if (currentValue === initState.length)\r\n        currentValue = 0;\r\n    else\r\n        currentValue += 1;\r\n    currentState[x][y] = currentValue;\r\n    undoStack.push([x, y]);\r\n}\r\n\r\nfunction isOK(numbers) {\r\n    var temp = [];\r\n    for (var i = 0; i < numbers.length; i++) {\r\n        var currentValue = numbers[i];\r\n        if (currentValue === 0)\r\n            return false;\r\n        if (temp.indexOf(currentValue) >= 0)\r\n            return false;\r\n        temp.push(currentValue);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction isSolved() {\r\n    for (var i = 0; i < currentState.length; i++) {\r\n        if (!isOK(currentState[i]))\r\n            return false;\r\n\r\n        var column = [];\r\n        var square = [];\r\n        for (var j = 0; j < currentState[i].length; j++) {\r\n            column.push(currentState[j][i]);\r\n            square.push(currentState[Math.floor(i / 3) * 3 + Math.floor(j / 3)]\r\n                                    [i % 3 * 3 + j % 3]);\r\n        }\r\n\r\n        if (!isOK(column))\r\n            return false;\r\n        if (!isOK(square))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction undo() {\r\n    if (!undoStack.length)\r\n        return;\r\n\r\n    var lastMove = undoStack.pop();\r\n    var x = lastMove[0];\r\n    var y = lastMove[1];\r\n    var currentValue = currentState[x][y];\r\n    if (currentValue === 0)\r\n        currentValue = initState.length;\r\n    else\r\n        currentValue -= 1;\r\n    currentState[x][y] = currentValue;\r\n}\r\n\r\nfunction note() {\r\n\r\n}\r\n\r\nfunction pen() {\r\n    var fs = require(\"fs\");\r\n    var data = '';\r\n\r\n    for (var i = 0; i < currentState.length; i++) {\r\n       data += currentState[i];\r\n    }\r\n    fs.writeFile('..//data//notes.data', data, (err) => {\r\n        if (err) throw err;\r\n    });\r\n    undoStack = [];\r\n}\r\n\"
}};

const qint32 Sudoku::Data::theStateMachineTable[] = {
	0x1, // version
	0, // name
	1, // data-model
	65, // child states array offset
	11, // transition to initial states
	-1, // initial setup
	0, // binding
	-1, // maxServiceId
	14, 8, // state offset and count
	102, 15, // transition offset and count
	192, 70, // array offset and size

	// States:
	1, -1, 0, 12, -1, 0, -1, -1, 57, 60, -1,
	3, 0, 0, 13, -1, -1, -1, -1, 8, 11, -1,
	9, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1,
	10, 1, 0, -1, -1, -1, -1, -1, -1, -1, -1,
	19, 0, 0, 14, -1, 43, -1, -1, 48, 51, -1,
	24, 4, 0, -1, -1, -1, -1, -1, -1, 36, -1,
	33, 4, 0, -1, -1, -1, -1, -1, -1, 45, -1,
	37, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1,

	// Transitions:
	2, -1, 0, 1, 0, -1, 
	6, -1, 0, 1, 4, 7, 
	16, -1, 0, 0, -1, 13, 
	18, -1, 0, 0, -1, 19, 
	20, -1, 0, 4, -1, 50, 
	24, -1, 0, 4, 22, -1, 
	28, -1, 0, 4, 26, -1, 
	32, -1, 1, 5, 30, -1, 
	34, -1, 0, 5, -1, 56, 
	41, -1, 1, 6, 39, -1, 
	43, -1, 0, 6, -1, 80, 
	-1, -1, 2, -1, 68, -1, 
	-1, -1, 2, 0, 63, -1, 
	-1, -1, 2, 1, 14, -1, 
	-1, -1, 2, 4, 55, -1, 

	// Arrays:
	1, 4, 
	1, 4, 
	1, 2, 
	1, 8, 
	2, 2, 3, 
	2, 0, 1, 
	1, 2, 
	1, 2, 
	1, 13, 
	1, 22, 
	1, 1, 
	1, 23, 
	1, 3, 
	1, 10, 
	1, 6, 
	1, 25, 
	1, 32, 
	2, 7, 8, 
	1, 5, 
	1, 34, 
	1, 32, 
	2, 9, 10, 
	2, 5, 6, 
	3, 4, 5, 6, 
	1, 5, 
	2, 1, 4, 
	2, 2, 3, 
	1, 1, 
	2, 0, 7, 
	1, 0, 

	0xc0ff33 // terminator
};

struct qt_meta_stringdata_Sudoku_t {
    QByteArrayData data[20];
    unsigned char stringdata0[192];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_Sudoku_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_Sudoku_t qt_meta_stringdata_Sudoku = {
    {
QT_MOC_LITERAL(0, 0, 6), // "Sudoku"
QT_MOC_LITERAL(1, 7, 11), // "gameChanged"
QT_MOC_LITERAL(2, 19, 0), // ""
QT_MOC_LITERAL(3, 20, 6), // "active"
QT_MOC_LITERAL(4, 27, 11), // "idleChanged"
QT_MOC_LITERAL(5, 39, 15), // "unsolvedChanged"
QT_MOC_LITERAL(6, 55, 13), // "solvedChanged"
QT_MOC_LITERAL(7, 69, 14), // "playingChanged"
QT_MOC_LITERAL(8, 84, 14), // "solvingChanged"
QT_MOC_LITERAL(9, 99, 13), // "notingChanged"
QT_MOC_LITERAL(10, 113, 14), // "notepadChanged"
QT_MOC_LITERAL(11, 128, 6), // "parent"
QT_MOC_LITERAL(12, 135, 4), // "game"
QT_MOC_LITERAL(13, 140, 4), // "idle"
QT_MOC_LITERAL(14, 145, 8), // "unsolved"
QT_MOC_LITERAL(15, 154, 6), // "solved"
QT_MOC_LITERAL(16, 161, 7), // "playing"
QT_MOC_LITERAL(17, 169, 7), // "solving"
QT_MOC_LITERAL(18, 177, 6), // "noting"
QT_MOC_LITERAL(19, 184, 7) // "notepad"
    },{
0x53,0x75,0x64,0x6f,0x6b,0x75,0, // 0: Sudoku
0x67,0x61,0x6d,0x65,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 1: gameChanged
0, // 2: 
0x61,0x63,0x74,0x69,0x76,0x65,0, // 3: active
0x69,0x64,0x6c,0x65,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 4: idleChanged
0x75,0x6e,0x73,0x6f,0x6c,0x76,0x65,0x64,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 5: unsolvedChanged
0x73,0x6f,0x6c,0x76,0x65,0x64,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 6: solvedChanged
0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 7: playingChanged
0x73,0x6f,0x6c,0x76,0x69,0x6e,0x67,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 8: solvingChanged
0x6e,0x6f,0x74,0x69,0x6e,0x67,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 9: notingChanged
0x6e,0x6f,0x74,0x65,0x70,0x61,0x64,0x43,0x68,0x61,0x6e,0x67,0x65,0x64,0, // 10: notepadChanged
0x70,0x61,0x72,0x65,0x6e,0x74,0, // 11: parent
0x67,0x61,0x6d,0x65,0, // 12: game
0x69,0x64,0x6c,0x65,0, // 13: idle
0x75,0x6e,0x73,0x6f,0x6c,0x76,0x65,0x64,0, // 14: unsolved
0x73,0x6f,0x6c,0x76,0x65,0x64,0, // 15: solved
0x70,0x6c,0x61,0x79,0x69,0x6e,0x67,0, // 16: playing
0x73,0x6f,0x6c,0x76,0x69,0x6e,0x67,0, // 17: solving
0x6e,0x6f,0x74,0x69,0x6e,0x67,0, // 18: noting
0x6e,0x6f,0x74,0x65,0x70,0x61,0x64,0 // 19: notepad
    }};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_Sudoku[] = {

 // content:
       8,       // revision
       0,       // classname
       0,    0, // classinfo
       8,   14, // methods
       8,   81, // properties
       0,    0, // enums/sets
       1,  113, // constructors
       0,       // flags
       8,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   54,    2, 0x06 /* Public */,
       4,    1,   57,    2, 0x06 /* Public */,
       5,    1,   60,    2, 0x06 /* Public */,
       6,    1,   63,    2, 0x06 /* Public */,
       7,    1,   66,    2, 0x06 /* Public */,
       8,    1,   69,    2, 0x06 /* Public */,
       9,    1,   72,    2, 0x06 /* Public */,
      10,    1,   75,    2, 0x06 /* Public */,

 // signals: parameters
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,
    QMetaType::Void, QMetaType::Bool,    3,

 // constructors: parameters
    0x80000000 | 2, QMetaType::QObjectStar,   11,

 // properties: name, type, flags
      12, QMetaType::Bool, 0x006a6001,
      13, QMetaType::Bool, 0x006a6001,
      14, QMetaType::Bool, 0x006a6001,
      15, QMetaType::Bool, 0x006a6001,
      16, QMetaType::Bool, 0x006a6001,
      17, QMetaType::Bool, 0x006a6001,
      18, QMetaType::Bool, 0x006a6001,
      19, QMetaType::Bool, 0x006a6001,

 // properties: notify_signal_id
       0,
       1,
       2,
       3,
       4,
       5,
       6,
       7,

 // constructors: name, argc, parameters, tag, flags
       0,    1,   78,    2, 0x0e /* Public */,

       0        // eod
};

void Sudoku::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::CreateInstance) {
        switch (_id) {
        case 0: { Sudoku *_r = new Sudoku((*reinterpret_cast< QObject **>(_a[1])));
            if (_a[0]) *reinterpret_cast<QObject**>(_a[0]) = _r; } break;
        default: break;
        }
    } else if (_c == QMetaObject::InvokeMetaMethod) {
        Sudoku *_t = static_cast<Sudoku *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: QMetaObject::activate(_o, &staticMetaObject, 0, _a); break;
        case 1: QMetaObject::activate(_o, &staticMetaObject, 1, _a); break;
        case 2: QMetaObject::activate(_o, &staticMetaObject, 2, _a); break;
        case 3: QMetaObject::activate(_o, &staticMetaObject, 3, _a); break;
        case 4: QMetaObject::activate(_o, &staticMetaObject, 4, _a); break;
        case 5: QMetaObject::activate(_o, &staticMetaObject, 5, _a); break;
        case 6: QMetaObject::activate(_o, &staticMetaObject, 6, _a); break;
        case 7: QMetaObject::activate(_o, &staticMetaObject, 7, _a); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        Q_UNUSED(result);
        Q_UNUSED(func);
    }
#ifndef QT_NO_PROPERTIES
    else if (_c == QMetaObject::ReadProperty) {
        Sudoku *_t = static_cast<Sudoku *>(_o);
        Q_UNUSED(_t)
        void *_v = _a[0];
        switch (_id) {
        case 0: *reinterpret_cast< bool*>(_v) = _t->isActive(0); break;
        case 1: *reinterpret_cast< bool*>(_v) = _t->isActive(1); break;
        case 2: *reinterpret_cast< bool*>(_v) = _t->isActive(2); break;
        case 3: *reinterpret_cast< bool*>(_v) = _t->isActive(3); break;
        case 4: *reinterpret_cast< bool*>(_v) = _t->isActive(4); break;
        case 5: *reinterpret_cast< bool*>(_v) = _t->isActive(5); break;
        case 6: *reinterpret_cast< bool*>(_v) = _t->isActive(6); break;
        case 7: *reinterpret_cast< bool*>(_v) = _t->isActive(7); break;
        default: break;
        }
    } else if (_c == QMetaObject::WriteProperty) {
    } else if (_c == QMetaObject::ResetProperty) {
    }
#endif // QT_NO_PROPERTIES
}

const QMetaObject Sudoku::staticMetaObject = {
    { &QScxmlStateMachine::staticMetaObject, qt_meta_stringdata_Sudoku.data,
      qt_meta_data_Sudoku,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *Sudoku::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *Sudoku::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, reinterpret_cast<const char *>(
            qt_meta_stringdata_Sudoku.stringdata0)))
        return static_cast<void*>(const_cast< Sudoku*>(this));
    return QScxmlStateMachine::qt_metacast(_clname);
}

int Sudoku::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QScxmlStateMachine::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 8)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 8)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 8;
    }
#ifndef QT_NO_PROPERTIES
   else if (_c == QMetaObject::ReadProperty || _c == QMetaObject::WriteProperty
            || _c == QMetaObject::ResetProperty || _c == QMetaObject::RegisterPropertyMetaType) {
        qt_static_metacall(this, _c, _id, _a);
        _id -= 8;
    } else if (_c == QMetaObject::QueryPropertyDesignable) {
        _id -= 8;
    } else if (_c == QMetaObject::QueryPropertyScriptable) {
        _id -= 8;
    } else if (_c == QMetaObject::QueryPropertyStored) {
        _id -= 8;
    } else if (_c == QMetaObject::QueryPropertyEditable) {
        _id -= 8;
    } else if (_c == QMetaObject::QueryPropertyUser) {
        _id -= 8;
    }
#endif // QT_NO_PROPERTIES
    return _id;
}


